{"version":3,"sources":["NotFound.js","NamesTable.js","GeographyTable.js","CountryDetail.js","CountryListItem.js","CountryList.js","Search.js","SortOrder.js","NavBar.js","App.js","ScrollToTop.js","index.js"],"names":["NotFound","location","useLocation","className","pathname","NamesTable","props","colSpan","name","nativeName","altSpellings","join","languages","map","lang","demonym","topLevelDomain","GeographyTable","region","subregion","capital","population","toLocaleString","area","borders","length","border","index","key","to","CountryDetail","state","isLoading","countryIsFound","country","alpha3Code","this","match","params","getCountryData","prevProps","setState","countryData","find","src","flag","alt","title","React","Component","CountryListItem","CountryList","countryList","Search","onSubmit","handleSubmit","type","placeholder","required","SortOrder","value","sortOrder","onChange","handleChange","NavBar","App","fetchSuccess","bind","fetch","then","response","ok","Error","text","json","catch","error","console","e","target","sortCountryData","preventDefault","query","elements","toLowerCase","some","history","push","alert","reset","firstChild","blur","arr","sort","a","b","localeCompare","Fragment","exact","path","render","withRouter","ScrollToTop","window","scrollTo","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.950facd5.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction NotFound() {\n  const location = useLocation();\n  return (\n    <div className=\"not-found\">\n      <div>\n        <h2>No resource found for {location.pathname}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\n\nfunction NamesTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Names</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <td>{props.name || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Native Name</th>\n          <td>{props.nativeName || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Alternate Spellings</th>\n          <td>{props.altSpellings.join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Languages</th>\n          <td>{props.languages.map(lang => (lang.name)).join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Demonym</th>\n          <td>{props.demonym || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Top Level Domain (TLD)</th>\n          <td>{props.topLevelDomain.join(\", \") || \"N/A\"}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default NamesTable;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction GeographyTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Geography</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Region</th>\n          <td>{props.region || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Subregion</th>\n          <td>{props.subregion || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Capital</th>\n          <td>{props.capital || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Population</th>\n          <td>\n            { props.population ? (\n                props.population.toLocaleString(\"en-US\")\n              ) : 0\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Area</th>\n          <td>\n            { props.area ? (\n                <span>{props.area.toLocaleString(\"en-US\")} km<sup>2</sup></span>\n              ) : \"N/A\"\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Bordering Countries</th>\n          <td>\n            {props.borders.length ?\n              props.borders.map((border, index, borders) => (\n              <span key={border}>\n                <Link\n                  to={`/restcountries-navigator/countries/${border}`}\n                >\n                  <span>{border}{index + 1 !== borders.length ? \", \" : \"\"}</span>\n                </Link>\n              </span>\n            )) : \"N/A\" }\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default GeographyTable;","import React from \"react\";\nimport NotFound from \"./NotFound\";\nimport NamesTable from \"./NamesTable\";\nimport GeographyTable from \"./GeographyTable\";\n\nclass CountryDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      countryIsFound: false,\n      country: []\n    }\n  }\n\n  componentDidMount() {\n    const { alpha3Code } = this.props.match.params;\n    this.getCountryData(alpha3Code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { alpha3Code } = this.props.match.params;\n    if (alpha3Code !== prevProps.match.params.alpha3Code) {\n      this.setState({ isLoading: true })\n      this.getCountryData(alpha3Code);\n    }\n  }\n\n  getCountryData(alpha3Code) {\n    const country = this.props.countryData.find(country => country.alpha3Code === alpha3Code)\n    if (country) {\n      this.setState({ isLoading: false, country: country, countryIsFound: true });\n    } else {\n      this.setState({ isLoading: false, countryIsFound: false })\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <h2 className=\"loading-msg\">Loading...</h2>\n    }\n\n    if (!(this.state.isLoading || this.state.countryIsFound)) {\n      return <NotFound />\n    }\n\n    return (\n      <div className=\"country-detail\">\n        <h1>{this.state.country.name}</h1>\n        <div className=\"country-detail-container\">\n          <div className=\"country-detail-flag\">\n            <img\n              src={this.state.country.flag}\n              alt={`Flag of ${this.state.country.name}`}\n              title={`Flag of ${this.state.country.name}`}\n            />\n          </div>\n\n          <NamesTable\n            name={this.state.country.name}\n            nativeName={this.state.country.nativeName}\n            altSpellings={this.state.country.altSpellings}\n            languages={this.state.country.languages}\n            demonym={this.state.country.demonym}\n            topLevelDomain={this.state.country.topLevelDomain}\n          />\n\n          <GeographyTable\n            region={this.state.country.region}\n            subregion={this.state.country.subregion}\n            capital={this.state.country.capital}\n            population={this.state.country.population}\n            area={this.state.country.area}\n            borders={this.state.country.borders}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CountryDetail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CountryListItem(props) {\n  const title = `Flag of ${props.name}`;\n  const population = props.population.toLocaleString(\"en-US\");\n\n  return (\n    <li className=\"country-list-item\">\n      <img\n        src={props.flag}\n        alt={title}\n        title={title}\n      />\n      <div className=\"country-info\">\n        <Link to={`/restcountries-navigator/countries/${props.alpha3Code}`}>\n          <h3>{props.name}</h3>\n        </Link>\n        <p className=\"native-name\">({props.nativeName})</p>\n        <p>Population: {population}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default CountryListItem;\n","import React from \"react\";\nimport CountryListItem from \"./CountryListItem\";\n\nfunction CountryList(props) {\n\n  const countryList = props.countryData.map(country => (\n    <CountryListItem\n      key={country.alpha3Code}\n      name={country.name}\n      nativeName={country.nativeName}\n      flag={country.flag}\n      population={country.population}\n      alpha3Code={country.alpha3Code}\n    />\n  ));\n\n  return (\n    <ul className=\"country-list\">\n      { countryList }\n    </ul>\n  );\n}\n\nexport default CountryList;\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <input\n        name=\"searchQuery\"\n        type=\"search\"\n        placeholder=\"Search ...\"\n        required\n      />\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default Search;","import React from \"react\";\n\nfunction SortOrder(props) {\n  return (\n    <select\n      name=\"sortOrder\"\n      value={props.sortOrder}\n      onChange={props.handleChange}\n    >\n      <option value=\"\">Sort Order</option>\n      <option value=\"alpha\">A-Z</option>\n      <option value=\"alphaReverse\">Z-A</option>\n      <option value=\"pop\">Population &#8679;</option>\n      <option value=\"popReverse\">Population &#8681;</option>\n    </select>\n  );\n}\n\nexport default SortOrder;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport SortOrder from \"./SortOrder\";\n\nfunction NavBar(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"title\">\n          <Link to=\"/restcountries-navigator\"><h1>Home</h1></Link>\n        </li>\n        <li className=\"search\">\n          <Search handleSubmit={props.handleSubmit}/>\n        </li>\n        <li className=\"sort-order\">\n          <SortOrder handleChange={props.handleChange}/>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport CountryDetail from \"./CountryDetail\";\nimport CountryList from \"./CountryList\";\nimport NavBar from \"./NavBar\";\nimport NotFound from \"./NotFound\";\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      fetchSuccess: false,\n      countryData: [],\n      sortOrder: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.text);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(json => this.setState({\n          isLoading: false,\n          fetchSuccess: true,\n          countryData: json\n      }))\n      .catch(error => {\n        console.error(error)\n        this.setState({ isLoading: false, fetchSuccess: false })\n      });\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      sortOrder: value,\n      countryData: this.sortCountryData(value)\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const query = e.target.elements[\"searchQuery\"].value.toLowerCase();\n    const country = this.state.countryData.find(country => (\n      country.name.toLowerCase() === query ||\n      country.nativeName.toLowerCase() === query ||\n      country.altSpellings.some(name => name.toLowerCase() === query)\n    ));\n    if (country) {\n      this.props.history.push(`/restcountries-navigator/countries/${country.alpha3Code}`);\n    } else {\n      alert(\"No country found matching query.\");\n    }\n    e.target.reset();\n    e.target.firstChild.blur();\n  }\n\n  sortCountryData(sortOrder) {\n    const arr = this.state.countryData;\n    switch (sortOrder) {\n      case \"alpha\":\n          arr.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n      case \"alphaReverse\":\n          arr.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n      case \"pop\":\n          arr.sort((a, b) => a.population - b.population);\n          break;\n      case \"popReverse\":\n          arr.sort((a, b) => b.population - a.population);\n          break;\n      default:\n          return arr;\n    }\n    return arr;\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <h1 className=\"loading-msg\">Loading...</h1>;\n    }\n\n    if (!(this.state.isLoading || this.state.fetchSuccess)) {\n      return (\n        <div>\n          <h1>Connection error!</h1>\n          <h2>A connection to the Restcountries.eu API could not be established.</h2>\n        </div>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        <NavBar\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n        <Switch>\n          <Route exact path=\"/restcountries-navigator\" >\n            <CountryList countryData={this.state.countryData} />\n          </Route>\n          <Route exact path=\"/restcountries-navigator/countries/:alpha3Code\" render={(props) => (\n            <CountryDetail\n              handleSubmit={this.handleSubmit}\n              countryData={this.state.countryData}\n              {...props}\n            />\n          )}/>\n          <Route>\n            <NotFound handleSubmit={this.handleSubmit}/>\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ScrollToTop />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}