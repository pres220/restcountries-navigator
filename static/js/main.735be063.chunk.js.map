{"version":3,"sources":["ConnectionError.js","GeographyTable.js","NamesTable.js","NotFound.js","Loading.js","CountryDetail.js","CountryListItem.js","CountryList.js","Search.js","SortOrder.js","NavBar.js","App.js","ScrollToTop.js","index.js"],"names":["ConnectionError","className","GeographyTable","props","colSpan","region","subregion","capital","population","toLocaleString","area","borders","length","map","border","index","key","to","NamesTable","name","nativeName","altSpellings","join","languages","lang","demonym","topLevelDomain","NotFound","location","useLocation","pathname","Loading","CountryDetail","state","isLoading","countryIsFound","country","alpha3Code","this","match","params","getCountryData","prevProps","setState","countriesData","find","src","flag","alt","title","React","Component","CountryListItem","CountryList","countryList","Search","onSubmit","handleSubmit","type","placeholder","required","SortOrder","value","sortOrder","onChange","handleChange","NavBar","App","fetchSuccess","bind","fetch","then","response","ok","Error","text","json","catch","error","console","e","target","sortCountriesData","preventDefault","query","elements","toLowerCase","some","history","push","alert","reset","firstChild","blur","arr","sort","a","b","localeCompare","Fragment","exact","path","render","withRouter","ScrollToTop","window","scrollTo","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.735be063.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ConnectionError() {\n  return (\n    <div className=\"message\">\n      <h1>Connection error!</h1>\n      <h2>A connection to the Restcountries.eu API could not be established.</h2>\n    </div>\n  )\n}\n\nexport default ConnectionError;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction GeographyTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Geography</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Region</th>\n          <td>{props.region || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Subregion</th>\n          <td>{props.subregion || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Capital</th>\n          <td>{props.capital || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Population</th>\n          <td>\n            { props.population ? (\n                props.population.toLocaleString(\"en-US\")\n              ) : 0\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Area</th>\n          <td>\n            { props.area ? (\n                <span>{props.area.toLocaleString(\"en-US\")} km<sup>2</sup></span>\n              ) : \"N/A\"\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Bordering Countries</th>\n          <td>\n            { props.borders.length ?\n                props.borders.map((border, index, borders) => (\n                <span key={border}>\n                  <Link to={`/${border}`} >\n                    <span>{border}{index + 1 !== borders.length ? \", \" : \"\"}</span>\n                  </Link>\n                </span>\n              )) : \"N/A\"\n            }\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default GeographyTable;","import React from \"react\";\n\nfunction NamesTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Names</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <td>{props.name || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Native Name</th>\n          <td>{props.nativeName || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Alternate Spellings</th>\n          <td>{props.altSpellings.join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Languages</th>\n          <td>{props.languages.map(lang => (lang.name)).join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Demonym</th>\n          <td>{props.demonym || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Top Level Domain (TLD)</th>\n          <td>{props.topLevelDomain.join(\", \") || \"N/A\"}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default NamesTable;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction NotFound() {\n  const location = useLocation();\n  return (\n    <div className=\"message\">\n      <h2>No resource found for {location.pathname}</h2>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\n\nfunction Loading() {\n  return (\n    <div className=\"message\">\n      <h1>Loading...</h1>\n    </div>\n  )\n}\n\nexport default Loading;\n","import React from \"react\";\nimport GeographyTable from \"./GeographyTable\";\nimport NamesTable from \"./NamesTable\";\nimport NotFound from \"./NotFound\";\nimport Loading from \"./Loading\";\n\nclass CountryDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      countryIsFound: false,\n      country: []\n    }\n  }\n\n  componentDidMount() {\n    const { alpha3Code } = this.props.match.params;\n    this.getCountryData(alpha3Code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { alpha3Code } = this.props.match.params;\n    if (alpha3Code !== prevProps.match.params.alpha3Code) {\n      this.setState({ isLoading: true })\n      this.getCountryData(alpha3Code);\n    }\n  }\n\n  getCountryData(alpha3Code) {\n    const country = this.props.countriesData.find(country => country.alpha3Code === alpha3Code)\n    if (country) {\n      this.setState({ isLoading: false, country: country, countryIsFound: true });\n    } else {\n      this.setState({ isLoading: false, countryIsFound: false })\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    if (!(this.state.isLoading || this.state.countryIsFound)) {\n      return <NotFound />\n    }\n\n    return (\n      <div className=\"country-detail\">\n        <h1>{this.state.country.name}</h1>\n        <div className=\"country-detail-container\">\n          <div className=\"country-detail-flag\">\n            <img\n              src={this.state.country.flag}\n              alt={`Flag of ${this.state.country.name}`}\n              title={`Flag of ${this.state.country.name}`}\n            />\n          </div>\n\n          <NamesTable\n            name={this.state.country.name}\n            nativeName={this.state.country.nativeName}\n            altSpellings={this.state.country.altSpellings}\n            languages={this.state.country.languages}\n            demonym={this.state.country.demonym}\n            topLevelDomain={this.state.country.topLevelDomain}\n          />\n\n          <GeographyTable\n            region={this.state.country.region}\n            subregion={this.state.country.subregion}\n            capital={this.state.country.capital}\n            population={this.state.country.population}\n            area={this.state.country.area}\n            borders={this.state.country.borders}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CountryDetail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CountryListItem(props) {\n  const title = `Flag of ${props.name}`;\n\n  return (\n    <li className=\"country-list-item\">\n      <img\n        src={props.flag}\n        alt={title}\n        title={title}\n      />\n      <div className=\"country-info\">\n        <Link to={`/${props.alpha3Code}`}>\n          <h3>{props.name}</h3>\n        </Link>\n        <p className=\"native-name\">({props.nativeName})</p>\n        <p>Population: {props.population.toLocaleString(\"en-US\")}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default CountryListItem;\n","import React from \"react\";\nimport CountryListItem from \"./CountryListItem\";\n\nfunction CountryList(props) {\n\n  const countryList = props.countriesData.map(country => (\n    <CountryListItem\n      key={country.alpha3Code}\n      name={country.name}\n      nativeName={country.nativeName}\n      flag={country.flag}\n      population={country.population}\n      alpha3Code={country.alpha3Code}\n    />\n  ));\n\n  return (\n    <ul className=\"country-list\">\n      { countryList }\n    </ul>\n  );\n}\n\nexport default CountryList;\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <input\n        name=\"searchQuery\"\n        type=\"search\"\n        placeholder=\"Search ...\"\n        required\n      />\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default Search;","import React from \"react\";\n\nfunction SortOrder(props) {\n  return (\n    <select\n      name=\"sortOrder\"\n      value={props.sortOrder}\n      onChange={props.handleChange}\n    >\n      <option value=\"\">Sort Order</option>\n      <option value=\"alpha\">A-Z</option>\n      <option value=\"alphaReverse\">Z-A</option>\n      <option value=\"pop\">Population &#8679;</option>\n      <option value=\"popReverse\">Population &#8681;</option>\n    </select>\n  );\n}\n\nexport default SortOrder;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport SortOrder from \"./SortOrder\";\n\nfunction NavBar(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"title\">\n          <Link to=\"/\"><h1>Home</h1></Link>\n        </li>\n        <li className=\"search\">\n          <Search handleSubmit={props.handleSubmit}/>\n        </li>\n        <li className=\"sort-order\">\n          <SortOrder handleChange={props.handleChange}/>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport ConnectionError from \"./ConnectionError\";\nimport CountryDetail from \"./CountryDetail\";\nimport CountryList from \"./CountryList\";\nimport Loading from \"./Loading\";\nimport NavBar from \"./NavBar\";\nimport NotFound from \"./NotFound\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      fetchSuccess: false,\n      countriesData: [],\n      sortOrder: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.text);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(json => this.setState({\n          isLoading: false,\n          fetchSuccess: true,\n          countriesData: json\n      }))\n      .catch(error => {\n        console.error(error);\n        this.setState({\n          isLoading: false,\n          fetchSuccess: false\n        });\n      });\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      sortOrder: value,\n      countriesData: this.sortCountriesData(value)\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const query = e.target.elements[\"searchQuery\"].value.toLowerCase();\n    const country = this.state.countriesData.find(country => (\n      country.name.toLowerCase() === query ||\n      country.nativeName.toLowerCase() === query ||\n      country.altSpellings.some(name => name.toLowerCase() === query)\n    ));\n    if (country) {\n      this.props.history.push(`/${country.alpha3Code}`);\n    } else {\n      alert(\"No country found matching query.\");\n    }\n    e.target.reset();\n    e.target.firstChild.blur();\n  }\n\n  sortCountriesData(sortOrder) {\n    const arr = this.state.countriesData;\n    switch (sortOrder) {\n      case \"alpha\":\n          arr.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n      case \"alphaReverse\":\n          arr.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n      case \"pop\":\n          arr.sort((a, b) => a.population - b.population);\n          break;\n      case \"popReverse\":\n          arr.sort((a, b) => b.population - a.population);\n          break;\n      default:\n          return arr;\n    }\n    return arr;\n  }\n\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />;\n    } else if (!this.state.fetchSuccess) {\n      return <ConnectionError />;\n    }\n\n    return (\n      <React.Fragment>\n        <NavBar handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n        <Switch>\n          <Route exact path=\"/\" >\n            <CountryList countriesData={this.state.countriesData} />\n          </Route>\n          <Route exact path=\"/:alpha3Code\" render={(props) => (\n            <CountryDetail countriesData={this.state.countriesData} {...props} />\n          )}/>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/restcountries-navigator\">\n    <ScrollToTop />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}