{"version":3,"sources":["ConnectionError.js","GeographyTable.js","NamesTable.js","NotFound.js","Loading.js","CountryDetail.js","CountryListItem.js","CountryList.js","Search.js","SortOrder.js","NavBar.js","App.js","ScrollToTop.js","index.js"],"names":["ConnectionError","className","GeographyTable","props","colSpan","region","subregion","capital","population","toLocaleString","area","borders","length","map","border","index","to","NamesTable","name","nativeName","altSpellings","join","languages","lang","demonym","topLevelDomain","NotFound","location","useLocation","pathname","Loading","CountryDetail","state","isLoading","countryIsFound","country","alpha3Code","this","match","params","getCountryData","prevProps","setState","countriesData","find","src","flag","alt","title","React","Component","CountryListItem","CountryList","countryList","Search","onSubmit","handleSearchQuerySubmit","type","placeholder","required","SortOrder","value","sortOrder","onChange","handleSortOrderChange","NavBar","detailPageStyle","path","App","fetchSuccess","bind","fetch","then","response","ok","Error","text","json","catch","error","console","e","target","prevState","sortCountriesData","preventDefault","query","elements","toLowerCase","some","history","push","alert","reset","firstChild","blur","countriesDataCopy","sort","a","b","localeCompare","Fragment","exact","render","withRouter","ScrollToTop","window","scrollTo","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.46940c28.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ConnectionError() {\n  return (\n    <div className=\"message\">\n      <h1>Connection error!</h1>\n      <h2>A connection to the Restcountries.eu API could not be established.</h2>\n    </div>\n  )\n}\n\nexport default ConnectionError;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction GeographyTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Geography</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Region</th>\n          <td>{props.region || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Subregion</th>\n          <td>{props.subregion || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Capital</th>\n          <td>{props.capital || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Population</th>\n          <td>\n            { props.population ? (\n                props.population.toLocaleString(\"en-US\")\n              ) : 0\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Area</th>\n          <td>\n            { props.area ? (\n                <span>{props.area.toLocaleString(\"en-US\")} km<sup>2</sup></span>\n              ) : \"N/A\"\n            }\n          </td>\n        </tr>\n        <tr>\n          <th>Bordering Countries</th>\n          <td>\n            { props.borders.length ?\n                props.borders.map((border, index, borders) => (\n                <span key={border}>\n                  <Link to={`/${border}`} >\n                    <span>{border}{index + 1 !== borders.length ? \", \" : \"\"}</span>\n                  </Link>\n                </span>\n              )) : \"N/A\"\n            }\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default GeographyTable;","import React from \"react\";\n\nfunction NamesTable(props) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Names</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <td>{props.name || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Native Name</th>\n          <td>{props.nativeName || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Alternate Spellings</th>\n          <td>{props.altSpellings.join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Languages</th>\n          <td>{props.languages.map(lang => (lang.name)).join(\", \") || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Demonym</th>\n          <td>{props.demonym || \"N/A\"}</td>\n        </tr>\n        <tr>\n          <th>Top Level Domain (TLD)</th>\n          <td>{props.topLevelDomain.join(\", \") || \"N/A\"}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default NamesTable;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction NotFound() {\n  const location = useLocation();\n  return (\n    <div className=\"message\">\n      <h2>No resource found for {location.pathname}</h2>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\n\nfunction Loading() {\n  return (\n    <div className=\"message\">\n      <h1>Loading...</h1>\n    </div>\n  )\n}\n\nexport default Loading;\n","import React from \"react\";\nimport GeographyTable from \"./GeographyTable\";\nimport NamesTable from \"./NamesTable\";\nimport NotFound from \"./NotFound\";\nimport Loading from \"./Loading\";\n\nclass CountryDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      countryIsFound: false,\n      country: []\n    }\n  }\n\n  componentDidMount() {\n    const { alpha3Code } = this.props.match.params;\n    this.getCountryData(alpha3Code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { alpha3Code } = this.props.match.params;\n    if (alpha3Code !== prevProps.match.params.alpha3Code) {\n      this.setState({ isLoading: true })\n      this.getCountryData(alpha3Code);\n    }\n  }\n\n  getCountryData(alpha3Code) {\n    const country = this.props.countriesData.find(country => country.alpha3Code === alpha3Code)\n    if (country) {\n      this.setState({ isLoading: false, country: country, countryIsFound: true });\n    } else {\n      this.setState({ isLoading: false, countryIsFound: false })\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    if (!(this.state.isLoading || this.state.countryIsFound)) {\n      return <NotFound />\n    }\n\n    return (\n      <div className=\"country-detail\">\n        <h1>{this.state.country.name}</h1>\n        <div className=\"country-detail-container\">\n          <div className=\"country-detail-flag\">\n            <img\n              src={this.state.country.flag}\n              alt={`Flag of ${this.state.country.name}`}\n              title={`Flag of ${this.state.country.name}`}\n            />\n          </div>\n\n          <NamesTable\n            name={this.state.country.name}\n            nativeName={this.state.country.nativeName}\n            altSpellings={this.state.country.altSpellings}\n            languages={this.state.country.languages}\n            demonym={this.state.country.demonym}\n            topLevelDomain={this.state.country.topLevelDomain}\n          />\n\n          <GeographyTable\n            region={this.state.country.region}\n            subregion={this.state.country.subregion}\n            capital={this.state.country.capital}\n            population={this.state.country.population}\n            area={this.state.country.area}\n            borders={this.state.country.borders}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CountryDetail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CountryListItem(props) {\n  const title = `Flag of ${props.name}`;\n\n  return (\n    <li className=\"country-list-item\">\n      <img\n        src={props.flag}\n        alt={title}\n        title={title}\n      />\n      <div className=\"country-info\">\n        <Link to={`/${props.alpha3Code}`}>\n          <h3>{props.name}</h3>\n        </Link>\n        <p className=\"native-name\">({props.nativeName})</p>\n        <p>Population: {props.population.toLocaleString(\"en-US\")}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default CountryListItem;\n","import React from \"react\";\nimport CountryListItem from \"./CountryListItem\";\n\nfunction CountryList(props) {\n\n  const countryList = props.countriesData.map(country => (\n    <CountryListItem\n      key={country.alpha3Code}\n      name={country.name}\n      nativeName={country.nativeName}\n      flag={country.flag}\n      population={country.population}\n      alpha3Code={country.alpha3Code}\n    />\n  ));\n\n  return (\n    <ul className=\"country-list\">\n      { countryList }\n    </ul>\n  );\n}\n\nexport default CountryList;\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <form onSubmit={props.handleSearchQuerySubmit}>\n      <input\n        name=\"searchQuery\"\n        type=\"search\"\n        placeholder=\"Search ...\"\n        required\n      />\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default Search;","import React from \"react\";\n\nfunction SortOrder(props) {\n  return (\n    <select\n      name=\"sortOrder\"\n      value={props.sortOrder}\n      onChange={props.handleSortOrderChange}\n    >\n      <option value=\"\">Sort Order</option>\n      <option value=\"alpha\">A-Z</option>\n      <option value=\"alphaReverse\">Z-A</option>\n      <option value=\"pop\">Population &#8679;</option>\n      <option value=\"popReverse\">Population &#8681;</option>\n    </select>\n  );\n}\n\nexport default SortOrder;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport SortOrder from \"./SortOrder\";\n\nfunction NavBar(props) {\n  const detailPageStyle = props.match.path === \"/:alpha3Code\" ? \"detail-page\" : \"\";\n\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"title\">\n          <Link to=\"/\"><h1>Home</h1></Link>\n        </li>\n        <li className=\"search\">\n          <Search handleSearchQuerySubmit={props.handleSearchQuerySubmit}/>\n        </li>\n        <li className={`sort-order ${detailPageStyle}`}>\n          <SortOrder handleSortOrderChange={props.handleSortOrderChange}/>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport ConnectionError from \"./ConnectionError\";\nimport CountryDetail from \"./CountryDetail\";\nimport CountryList from \"./CountryList\";\nimport Loading from \"./Loading\";\nimport NavBar from \"./NavBar\";\nimport NotFound from \"./NotFound\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      fetchSuccess: false,\n      countriesData: [],\n      sortOrder: \"\"\n    };\n\n    this.handleSortOrderChange = this.handleSortOrderChange.bind(this);\n    this.handleSearchQuerySubmit = this.handleSearchQuerySubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.text);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(json => this.setState({\n          isLoading: false,\n          fetchSuccess: true,\n          countriesData: json\n      }))\n      .catch(error => {\n        console.error(error);\n        this.setState({\n          isLoading: false,\n          fetchSuccess: false\n        });\n      });\n  }\n\n  handleSortOrderChange(e) {\n    const { value } = e.target;\n    this.setState(prevState => ({\n      sortOrder: value,\n      countriesData: this.sortCountriesData(value, [...prevState.countriesData])\n    }));\n  }\n\n  handleSearchQuerySubmit(e) {\n    e.preventDefault();\n    const query = e.target.elements[\"searchQuery\"].value.toLowerCase();\n    const country = this.state.countriesData.find(country => (\n      country.name.toLowerCase() === query ||\n      country.nativeName.toLowerCase() === query ||\n      country.altSpellings.some(name => name.toLowerCase() === query)\n    ));\n    if (country) {\n      this.props.history.push(`/${country.alpha3Code}`);\n    } else {\n      alert(\"No country found matching query.\");\n    }\n    e.target.reset();\n    e.target.firstChild.blur();\n  }\n\n  sortCountriesData(sortOrder, countriesDataCopy) {\n    switch (sortOrder) {\n      case \"alpha\":\n          countriesDataCopy.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n      case \"alphaReverse\":\n          countriesDataCopy.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n      case \"pop\":\n          countriesDataCopy.sort((a, b) => a.population - b.population);\n          break;\n      case \"popReverse\":\n          countriesDataCopy.sort((a, b) => b.population - a.population);\n          break;\n      default:\n          return countriesDataCopy;\n    }\n    return countriesDataCopy;\n  }\n\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />;\n    } else if (!this.state.fetchSuccess) {\n      return <ConnectionError />;\n    }\n\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n            <React.Fragment>\n              <NavBar\n                handleSearchQuerySubmit={this.handleSearchQuerySubmit}\n                handleSortOrderChange={this.handleSortOrderChange}\n                {...props}\n              />\n              <CountryList countriesData={this.state.countriesData} />\n            </React.Fragment>\n          )}>\n          </Route>\n          <Route exact path=\"/:alpha3Code\" render={(props) => (\n            <React.Fragment>\n              <NavBar\n                handleSearchQuerySubmit={this.handleSearchQuerySubmit}\n                handleSortOrderChange={this.handleSortOrderChange}\n                {...props}\n              />\n              <CountryDetail countriesData={this.state.countriesData} {...props} />\n            </React.Fragment>\n          )}/>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/restcountries-navigator\">\n    <ScrollToTop />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}